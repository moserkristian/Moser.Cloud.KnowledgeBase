{
  /*
The following identity settings need to be configured
before the project can be successfully executed.
For more info see https://aka.ms/dotnet-template-ms-identity-platform
*/
  "AzureAd": {
    "Instance": "https://login.microsoftonline.com/",
    "Domain": "qualified.domain.name",
    "TenantId": "22222222-2222-2222-2222-222222222222",
    "ClientId": "11111111-1111-1111-11111111111111111",

    "Scopes": "access_as_user",
    "CallbackPath": "/signin-oidc"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "Serilog": {
    "Using": [ "Serilog.Sinks.Console", "Serilog.Sinks.File" ],
    "MinimumLevel": "Information",
    "WriteTo": [
      {
        "Name": "Console"
      },
      {
        "Name": "File",
        "Args": {
          "path": "Logs/log-.txt",
          "rollingInterval": "Day",
          "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}] {Message:lj}{NewLine}{Exception}"
        }
      }
    ],
    "Enrich": [ "FromLogContext", "WithMachineName", "WithThreadId" ],
    "Properties": {
      "MicroserviceName": "Example"
    }
  }
  /*
    "OpenTelemetry": {
      "ServiceName": "Example",
      "ServiceNamespace": "Example",
      "ServiceVersion": "1.0.0",
      "ServiceInstanceId": "instance-001",
      "Instrumentation": {
        "Logs": true,
        "AspNetCore": true,
        "HttpClient": true,
        "Npgsql": true,
        "LogsAsExceptionEvents": false
      },
      "Exporters": {
        "Otlp": {
          "Endpoint": "http://localhost:4318",
          "Protocol": "http",
          "Enabled": false
        },
        "ApplicationInsights": {
          "Enabled": true,
          "ConnectionString": "InstrumentationKey=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx;IngestionEndpoint=https://germanywestcentral-1.in.applicationinsights.azure.com/;LiveEndpoint=https://germanywestcentral.livediagnostics.monitor.azure.com/;ApplicationId=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
        }
      }
    },
    "OPA": {
      "BaseUrl": "http://localhost:8181/v1/data/"
    },
    "AzureAdB2C": {
      "Instance": "https://mosercloud.b2clogin.com",
      "Domain": "mosercloud.onmicrosoft.com",
      "ClientId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
      "SignedOutCallbackPath": "/signout/B2C_1_SignUpAndSignIn",
      "SignUpSignInPolicyId": "B2C_1_SignUpAndSignIn"
    },
    "OpenApiOAuthFlow": {
      "AuthorizationUrl": "https://mosercloud.b2clogin.com/mosercloud.onmicrosoft.com/B2C_1_SignUpAndSignIn/oauth2/v2.0/authorize",
      "TokenUrl": "https://mosercloud.b2clogin.com/mosercloud.onmicrosoft.com/B2C_1_SignUpAndSignIn/oauth2/v2.0/token",
      "RefreshUrl": "https://mosercloud.b2clogin.com/mosercloud.onmicrosoft.com/B2C_1_SignUpAndSignIn/oauth2/v2.0/token",
      "Scopes": [
        "https://mosercloud.onmicrosoft.com/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/Task.Read",
        "openid"
      ]
    },
    "AzureManagedIdentity": {
      "ClientId": "",
      "IdentityName": "xxx-config-svr-app-user-assign-1",
      "Scopes": [
        "https://cloudEventHub.servicebus.windows.net/.default"
      ]
    },
    "AzureSchemaRegistry": {
      "Url": "cloudEventHub.servicebus.windows.net",
      "GroupName": "avro"
    },
    "AzureEventHubProducer": {
      "BootstrapServers": "cloudEventHub.servicebus.windows.net:9093",
      "TopicName": "test.moser.cloud.knowledgebase.example",
      "ClientId": "your-client-id"
    },
    "UseAzureManagedIdentity": true*/
}